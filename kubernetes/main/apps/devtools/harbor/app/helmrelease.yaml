---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: harbor
      version: 1.15.1
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - targetPath: harborAdminPassword
      kind: Secret
      name: harbor-secret
      valuesKey: HARBOR_ADMIN_PASS
    - targetPath: database.external.password
      kind: Secret
      name: harbor-secret
      valuesKey: INIT_POSTGRES_PASS
    - targetPath: database.external.username
      kind: Secret
      name: harbor-secret
      valuesKey: INIT_POSTGRES_USER
  values:
    core:
      initContainers:
        init-db:
          image:
            repository: ghcr.io/onedr0p/postgres-init
            tag: 16
          envFrom: &envFrom
            - secretRef:
                name: harbor-secret
    expose:
      type: ingress
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/client-body-buffer-size: "10g"
          # Remember to NOT use CF proxying due to 100M upload limit though it
          nginx.ingress.kubernetes.io/custom-http-errors: "418"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "480"
        className: internal
        controller: default
        hosts:
          core: "ocr.${CLUSTER_DOMAIN}"
      tls:
        certSource: secret
        secret:
          secretName: "tls.${CLUSTER_DOMAIN/./-}"
      loadBalancer:
        name: harbor
    externalURL: "https://ocr.${SECRET_DOMAIN}"
    ipFamily:
      ipv6:
        enabled: false
    persistence:
      enabled: true
      persistentVolumeClaim:
        registry:
          existingClaim: harbor-registry
          storageClass: openebs-hostpath
          subPath: registry
        jobService:
          jobLog:
            storageClass: openebs-hostpath
        database:
          storageClass: openebs-hostpath
        redis:
          storageClass: openebs-hostpath
        trivy:
          storageClass: openebs-hostpath
    database:
      type: external
      external:
        host: "postgres-rw.database.svc.cluster.local"
        port: "5432"
        coreDatabase: "harbor"
      maxIdleConns: 20
      maxOpenConns: 50
      podAnnotations: { }
    notary:
      enabled: false
