---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: amd-device-plugin-gpu
      namespace: kube-system
    - name: longhorn
      namespace: storage
  values:
    controllers:
      jellyfin:
        pod:
          nodeSelector:
            amd.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 442
            runAsGroup: 442
            fsGroup: 442
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
            supplementalGroups:
              - 44 # video
              - 109 # render
        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.9.9@sha256:d6f3d4aa59438ce951d85669f3c22426d20edb7a6b97604c509b5f4825bc8294
            env:
              JELLYFIN_PublishedServerUrl: https://jellyfin.${CLOUDFLARE_DOMAIN}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
                amd.com/gpu: 1
              limits:
                memory: 5Gi
                amd.com/gpu: 1
    service:
      app:
        controller: jellyfin
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_JELLYFIN_ADDR}
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: jellyfin.${CLOUDFLARE_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: jellyfin-config
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
      media:
        type: nfs
        enabled: true
        server: ${NFS_MAIN_SERVER_ADDR}
        path: /nas/Media
        globalMounts:
          - path: /media
