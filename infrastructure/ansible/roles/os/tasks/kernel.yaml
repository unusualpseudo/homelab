---
- name: System Configuration | Enable kernel modules runtime
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - br_netfilter
    - overlay
    - rbd

- name: System Configuration | Enable kernel modules on boot
  copy:
    mode: 0644
    content: "{{ item }}"
    dest: "/etc/modules-load.d/{{ item }}.conf"
  loop:
    - br_netfilter
    - overlay
    - rbd

- name: System Configuration | Disable mitigations
  ansible.builtin.replace:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ item.key | regex_escape }}=).)*)(?:[" ]{{ item.key | regex_escape }}=\S+)?(.*")$'
    replace: '\1 {{ item.key }}={{ item.value }}\2'
  with_dict: "{{ grub_config }}"
  vars:
    grub_config:
      apparmor: "0"
      mitigations: "off"
  register: grub_status

- name: System Configuration | Reconfigure grub and initramfs
  ansible.builtin.command: update-grub
  when: grub_status.changed

- name: System Configuration | Check if mitigations is disabled
  shell: grep "GRUB_CMDLINE_LINUX=" /etc/default/grub | grep -c "mitigations=off"
  register: mitigations_status
  ignore_errors: true

- name: System Configuration | Disable mitigations
  replace:
    path: "/etc/default/grub"
    regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ option | regex_escape }}=).)*)(?:[" ]{{ option | regex_escape }}=\S+)?(.*")$'
    replace: '\1 {{ option }}={{ value }}\2'
  vars:
    option: mitigations
    value: "off"
  when:
    - mitigations_status.stdout == "0"

- name: System Configuration | Run grub-mkconfig
  command: update-grub
  when:
    - mitigations_status.stdout == "0"


- name: System Configuration | Select default locale
  debconf:
    name: locales
    question: locales/default_environment_locale
    value: en_US.UTF-8
    vtype: select
