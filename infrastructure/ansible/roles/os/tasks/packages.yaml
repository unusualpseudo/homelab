---
- name: Change PVE source list
  lineinfile:
    path: "/etc/apt/sources.list.d/pve-enterprise.list"
    regexp: "^(.*)deb https://enterprise.proxmox.com/debian/pve bullseye pve-enterprise(.*)$"
    line: "deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription"
    backrefs: true

- name: Upgrade all system packages
  apt:
    upgrade: full
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success

- name: Install aptitude
  package:
    name: aptitude
    state: present
    update_cache: true

- name: Install packages list
  package:
    name: "{{ apt_install_packages }}"
    state: latest
    update_cache: true

- name: Copy 20auto-upgrades config
  blockinfile:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    mode: 0644
    create: true
    block: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Download-Upgradeable-Packages "1";
      APT::Periodic::AutocleanInterval "7";
      APT::Periodic::Unattended-Upgrade "1";

- name: Copy 50unattended-upgrades config
  blockinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    mode: 0644
    create: true
    block: |
      Unattended-Upgrade::Automatic-Reboot "false";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id} stable";
          "${distro_id} ${distro_codename}-security";
          "${distro_id} ${distro_codename}-updates";
      };

- name: Restart unattended-upgrades service
  systemd:
    name: unattended-upgrades
    daemon_reload: true
    enabled: true
    state: restarted

- name: Remove packages
  block:
    - name: Remove packages
      apt:
        name: "{{ apt_remove_packages }}"
        state: absent
        autoremove: true
        autoclean: true

    - name: Clean files
      file:
        state: absent
        path: "{{ item }}"
      loop:
        - "/home/{{ ansible_user }}/.snap"
        - "/snap"
        - "/var/snap"
        - "/var/lib/snapd"
        - "/var/cache/snapd"
        - "/usr/lib/snapd"
      when:
        - "'snapd' in apt_remove_packages"
  when:
    - apt_remove_packages is defined
    - apt_remove_packages is iterable
    - apt_remove_packages | length > 0
    - not hypervisor
