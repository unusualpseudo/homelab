---
- name: Check if linux pam user is created
  lineinfile:
    name: /etc/pve/user.cfg
    regexp: "^user:{{ pam_user }}@pam:*"
    state: absent
  check_mode: true
  changed_when: false
  register: pam_user_status

- name: "Create Linux user {{ pam_user }}"
  import_role:
    name: users
  vars:
    username: "{{ pam_user }}"
    password: "{{ pam_user_password }}"
  when: not pam_user_status.found

- name: Add user to Proxmox
  block:
    - name: Add user to Proxmox
      shell: "pveum user add {{ pam_user }}@pam"

    - name: Setting permissions/role to the user
      shell: "pveum acl modify / --roles Administrator --users {{ pam_user }}@pam"
  when: not pam_user_status.found

- name: Check if terraform pve user is created
  lineinfile:
    name: /etc/pve/user.cfg
    regexp: "^user:{{ pve_terraform_user }}@pve:*"
    state: absent
  check_mode: true
  changed_when: false
  register: terraform_pve_user_status

- name: Create Terraform user
  shell: "pveum user add {{ pve_terraform_user }}@pve -password {{ pve_terraform_user_password }}"
  when: not terraform_pve_user_status.found

- name: Check if terraform role exists
  lineinfile:
    name: /etc/pve/user.cfg
    regexp: "^role:{{ pve_terraform_role }}:*"
    state: absent
  check_mode: true
  changed_when: false
  register: terraform_role_status

- name: Create Terraform role
  shell: "pveum role add {{ pve_terraform_role }} -privs '{{ pve_terraform_role_permissions }}'"
  when: not terraform_role_status.found

- name: Assign role to terraform user
  shell: "pveum aclmod / -user {{ pve_terraform_user }}@pve -role {{ pve_terraform_role }}"
  when: not terraform_pve_user_status.found

- name: Change root user password
  user:
    name: root
    state: present
    password: "{{ root_password | password_hash('sha512')}}"
