---
version: "3"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"

tasks:
  ansible:init:
    desc: Install/Upgrade Ansible galaxy dependencies
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-galaxy install -r requirements.yaml --roles-path ~/.ansible/roles --force
      - ansible-galaxy collection install -r requirements.yaml --collections-path ~/.ansible/collections --force

  list:
    desc: List kubernetes hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible kubernetes --list-hosts

  ping:
    desc: Ping kubernetes hosts
    cmds:
      - ansible kubernetes -m 'ping'

  uptime:
    desc: Uptime kubernetes all hosts
    cmds:
      - ansible kubernetes --one-line -a 'uptime'

  prepare:
    desc: Prepare hosts OS
    dir: "{{.ANSIBLE_PLAYBOOK_DIR}}"
    cmds:
      - ansible-playbook cluster/prepare.yaml

  install:
    desc: K3s install
    dir: "{{.ANSIBLE_PLAYBOOK_DIR}}"
    cmds:
      - ansible-playbook k3s/install.yaml

  nuke:
    desc: K3s Nuke
    dir: "{{.ANSIBLE_PLAYBOOK_DIR}}"
    cmds:
      - ansible-playbook k3s/nuke.yaml

  reboot:
    desc: Reboot all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook {{.ANSIBLE_PLAYBOOK_DIR}}/cluster/reboot-nodes.yaml

  poweroff:
    desc: Shutdown all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible kubernetes -a '/usr/bin/systemctl poweroff' --become
