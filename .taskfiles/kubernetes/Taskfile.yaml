---
version: "3"

vars:
  KUBECONFORM_SCRIPT: "{{.SCRIPTS_DIR}}/kubeconform.sh"

tasks:

  kubeconfig:
    desc: Download kubeconfig from a remote kubernetes master node
    cmds:
      - rsync --verbose --progress --partial -e "ssh -p ${CONTROL_NODE_SSH_PORT}" --rsync-path="sudo rsync" ${CONTROL_NODE_USER}@${CONTROL_NODE_ADDR}:/etc/rancher/k3s/k3s.yaml "${KUBECONFIG}"
      - sed -i "s/127.0.0.1/${CONTROL_NODE_ADDR}/g" "${KUBECONFIG}"
      - sed -i "s/default/${CLUSTER}/g" "${KUBECONFIG}"
      - chmod go-r "${KUBECONFIG}"

  secrets-sync:
    desc: Sync ExternalSecret resources
    vars:
      secret: '{{ .secret | default ""}}'
      namespace: '{{.namespace | default "default"}}'
    cmds:
      - |
        {{if eq .secret ""}}
          kubectl --context {{.CLUSTER}} get externalsecret.external-secrets.io --all-namespaces --no-headers -A | awk '{print $1, $2}' \
            | xargs --max-procs=4 -l bash -c 'kubectl --context {{.CLUSTER}} -n $0 annotate externalsecret.external-secrets.io $1 force-sync=$(date +%s) --overwrite'
        {{else}}
          kubectl --context {{.CLUSTER}} -n {{.namespace}} annotate externalsecret.external-secrets.io {{.secret}} force-sync=$(date +%s) --overwrite
        {{end}}
    preconditions:
      - kubectl --context {{.CLUSTER}} -n {{.namespace}} get es {{.secret}}

  certificates:
    desc: List all the certificates in a cluster
    cmds:
      - kubectl --context {{.CLUSTER}} get certificates {{.CLI_ARGS | default "-A"}}
      - kubectl --context {{.CLUSTER}} get certificaterequests {{.CLI_ARGS | default "-A"}}

  kubeconform:
    desc: Validate Kubernetes manifests with kubeconform
    cmd: bash {{.KUBECONFORM_SCRIPT}} {{.KUBERNETES_DIR}}
    preconditions:
      - msg: Missing kubeconform script
        sh: test -f {{.KUBECONFORM_SCRIPT}}
