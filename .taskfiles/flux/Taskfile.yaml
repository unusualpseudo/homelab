---
version: "3"
tasks:
  bootstrap:
    desc: Install flux and apps cluster
    cmds:
      - task k8s:kubeconfig
      - flux check --pre
      - kubectl --context {{.CLUSTER}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/bootstrap/flux
      - sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/flux/age-key.secret.sops.yaml | kubectl --context {{.CLUSTER}} apply --server-side --filename -
      - sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.secret.sops.yaml | kubectl --context {{.CLUSTER}} apply --server-side --filename -
      - kubectl --context {{.CLUSTER}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/flux/vars
      - kubectl --context {{.CLUSTER}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/flux/config
    preconditions:
      - { msg: "Argument (cluster) is required", sh: "test -n {{.CLUSTER}}" }
      - { msg: "Age private key not found", sh: "test -f {{.SOPS_AGE_KEY_FILE}}" }
      - { msg: "Age secret not found", sh: "test -f {{.KUBERNETES_DIR}}/bootstrap/flux/age-key.secret.sops.yaml" }
      - { msg: "Github deploy secret not found", sh: "test -f {{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.secret.sops.yaml" }
      - { msg: "Cluster settings not found", sh: "test -f {{.KUBERNETES_DIR}}/flux/vars/cluster-settings.env" }
      - { msg: "Cluster secrets not found", sh: "test -f {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.sops.env" }
      - { msg: "Unable to decrypt sops secret", sh: "sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/flux/age-key.secret.sops.yaml" }
      - { msg: "Unable to decrypt sops secret", sh: "sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.secret.sops.yaml" }
      - { msg: "Unable to decrypt sops secret", sh: "sops --decrypt {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.sops.env" }

  reconcile:
    aliases: [ "rc", "rec", "sync" ]
    desc: Force update Flux to pull in changes from your Git repository
    cmds:
      - flux --context {{.CLUSTER}} reconcile -n flux-system source git homelab
      - flux --context {{.CLUSTER}} reconcile -n flux-system kustomization cluster --with-source

  hr:
    desc: List all the helmreleases in your CLUSTER
    cmds:
      - kubectl --context {{.CLUSTER}} get helmreleases {{.CLI_ARGS | default "-A"}}

  hr-restart:
    desc: Restart all failed Helm Releases
    cmds:
      - kubectl --context {{.CLUSTER}} get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -l bash -c 'flux suspend hr $0 -n $1'
      - kubectl --context {{.CLUSTER}} get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -l bash -c 'flux resume hr $0 -n $1'

  ks:
    desc: List all the kustomizations in a cluster
    cmds:
      - kubectl --context {{.CLUSTER}} get kustomizations {{.CLI_ARGS | default "-A"}}

  ks-watch:
    desc: List all the kustomizations in a cluster
    cmds:
      - watch kubectl --context {{.CLUSTER}} get kustomizations {{.CLI_ARGS | default "-A"}}

  gr:
    desc: List all the gitrepositories in a cluster
    cmds:
      - kubectl --context {{.CLUSTER}} get gitrepositories {{.CLI_ARGS | default "-A"}}
