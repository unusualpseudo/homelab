---
version: "3"

tasks:
  verify:
    desc: Verify Flux prerequisites
    dir: "{{.KUBERNETES_DIR}}/bootstrap/flux"
    cmds:
      - flux check --pre

  install:
    cmds:
      - kubectl --context {{.CLUSTER}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/bootstrap/flux
      - sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/flux/age-key.secret.sops.yaml | kubectl --context {{.CLUSTER}} apply --server-side --filename -
      - sops --decrypt {{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.secret.sops.yaml | kubectl --context {{.CLUSTER}} apply --server-side --filename -
      - sops --decrypt {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml | kubectl --context {{.CLUSTER}} apply --server-side --filename -
      - kubectl --context {{.CLUSTER}} apply --server-side --filename {{.KUBERNETES_DIR}}/flux/vars/cluster-settings.yaml
      - kubectl --context {{.CLUSTER}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/flux/config
    preconditions:
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.KUBERNETES_DIR}}/bootstrap/flux/age-key.secret.sops.yaml
      - test -f {{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.secret.sops.yaml
      - test -f {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml
      - test -f {{.KUBERNETES_DIR}}/flux/vars/cluster-settings.yaml
      - sops filestatus {{.KUBERNETES_DIR}}/bootstrap/flux/age-key.secret.sops.yaml | jq --exit-status '.encrypted'
      - sops filestatus {{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.secret.sops.yaml | jq --exit-status '.encrypted'
      - sops filestatus {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.secret.sops.yaml | jq --exit-status '.encrypted'

  gr-sync:
    desc: Sync Flux GitRepositories
    cmds:
      - |
        kubectl get gitrepositories --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs --max-procs=4 -l bash -c \
            'kubectl -n $0 annotate gitrepository/$1 reconcile.fluxcd.io/requestedAt=$(date +%s) --field-manager=flux-client-side-apply --overwrite'
  ks-sync:
    desc: Sync Flux Kustomizations
    cmds:
      - |
        kubectl get kustomization --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs --max-procs=4 -l bash -c \
            'kubectl -n $0 annotate kustomization/$1 reconcile.fluxcd.io/requestedAt="$(date +%s)" --field-manager=flux-client-side-apply --overwrite'
  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmds:
      - flux reconcile -n flux-system source git homelab-repository
      - flux reconcile -n flux-system kustomization CLUSTER

  hr-sync:
    desc: Sync Flux HelmReleases
    cmds:
      - |
        kubectl get helmreleases --all-namespaces --no-headers | awk '{print $1, $2}' \
          | xargs --max-procs=4 -l bash -c \
            'kubectl -n $0 annotate helmrelease/$1 reconcile.fluxcd.io/requestedAt="$(date +%s)" --overwrite'

  hr-restart:
    desc: Restart all failed Helm Releases
    cmds:
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -l bash -c 'flux suspend hr $0 -n $1'
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -l bash -c 'flux resume hr $0 -n $1'

  nodes:
    desc: List all the nodes in your CLUSTER
    cmds:
      - kubectl get nodes {{.CLI_ARGS | default "-o wide"}}

  pods:
    desc: List all the pods in your CLUSTER
    cmds:
      - kubectl get pods {{.CLI_ARGS | default "-A"}}

  svc:
    desc: List all the services in your CLUSTER
    cmds:
      - kubectl get services {{.CLI_ARGS | default "-A"}}

  ks:
    desc: List all the kustomizations in your CLUSTER
    cmds:
      - kubectl get kustomizations {{.CLI_ARGS | default "-A"}}

  ks-watch:
    desc: List all the kustomizations in your CLUSTER
    cmds:
      - watch kubectl get kustomizations {{.CLI_ARGS | default "-A"}}


  hr:
    desc: List all the helmreleases in your CLUSTER
    cmds:
      - kubectl get helmreleases {{.CLI_ARGS | default "-A"}}

  helmrepositories:
    desc: List all the helmrepositories in your CLUSTER
    cmds:
      - kubectl get helmrepositories {{.CLI_ARGS | default "-A"}}

  gr:
    desc: List all the gitrepositories in your CLUSTER
    cmds:
      - kubectl get gitrepositories {{.CLI_ARGS | default "-A"}}

  certificates:
    desc: List all the certificates in your CLUSTER
    cmds:
      - kubectl get certificates {{.CLI_ARGS | default "-A"}}
      - kubectl get certificaterequests {{.CLI_ARGS | default "-A"}}

  ingress:
    desc: List all the ingresses in your CLUSTER
    cmds:
      - kubectl get ingress {{.CLI_ARGS | default "-A"}}

  resources:
    desc: Gather common resources in your CLUSTER, useful when asking for support
    cmds:
      - task: nodes
      - task: kustomizations
      - task: helmreleases
      - task: helmrepositories
      - task: gitrepositories
      - task: certificates
      - task: ingresses
      - task: pods
